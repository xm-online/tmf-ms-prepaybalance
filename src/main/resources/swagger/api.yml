openapi: 3.0.1
info:
  title: Prepay Balance Management
  description: |-
    ## TMF API Reference: TMF654 - Prepay Balance Management

    ### Draft : 19.5 - January 2020

    The Prepay Balance Management API enables consumers to manage the balance, recharge (top-up), transfer, reserve, unreserve, deduct and balance adjustments of a  bucket. A bucket is understood in the context of this API to be an entity that keeps track of the balance available to use services. Every bucket will measure balance in different units, it can be monetary or non-monetary (e.g.: number of sms that are available, number of GB of data available, â€¦)

    ### Resources
    - Bucket
    - TopupBalance
    - AdjustBalance
    - TransferBalance
    - ReserveBalance
    - AccumulatedBalance
    - BalanceActionHistory

    ### Operations
    - Retrieve the balance information on a bucket for a given product (individual or aggregated).
    - Retrieve the list of balance-related operations performed over a given product
    - Retrieve information about all the top-up operations stored in the server filtered by some criteria.
    - Perform a new top up operation (recharge)
    - Retrieve detailed information about a top-up operation previously processed by the server.
    - Retrieve the current and historic status information about a top-up operation previously processed by the server.
    - Perform a new transfer operation
    - Retrieve information about all the transfer operations stored in the server filtered by some criteria
    - Retrieve detailed information about a transfer operation previously processed by the server
    - Retrieve the current and historic status information about a transfer operation previously processed by the server.
    - Retrieve information about all the adjustments stored in the server filtered by some criteria.
    - Perform a new adjustment operation
    - Retrieve detailed information about a balance adjustment operation previously processed by the server
    - Reserve a balance on a bucket.
    - Unreserve a balance on a bucket.
    - Retrieve aggregated (accumulative) balances for a bucket.
  version: 4.0.0
servers:
  - url: https://serverRoot/tmf-api/prepayBalanceManagement/v4
tags:
  - name: bucket
  - name: topupBalance
  - name: adjustBalance
  - name: transferBalance
  - name: reserveBalance
  - name: accumulatedBalance
  - name: balanceActionHistory
  - name: notification listeners (client side)
  - name: events subscription
paths:
  /bucket:
    get:
      tags:
        - bucket
      summary: List or find Bucket objects
      description: This operation list or find Bucket entities
      operationId: listBucket
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bucket'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /bucket/{id}:
    get:
      tags:
        - bucket
      summary: Retrieves a Bucket by ID
      description: This operation retrieves a Bucket entity. Attribute selection is
        enabled for all first level attributes.
      operationId: retrieveBucket
      parameters:
        - name: id
          in: path
          description: Identifier of the Bucket
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Bucket'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /topupBalance:
    get:
      tags:
        - topupBalance
      summary: List or find TopupBalance objects
      description: This operation list or find TopupBalance entities
      operationId: listTopupBalance
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopupBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - topupBalance
      summary: Creates a TopupBalance
      description: This operation creates a TopupBalance entity.
      operationId: createTopupBalance
      requestBody:
        description: The TopupBalance to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TopupBalance_Create'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TopupBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: topupBalance
  /topupBalance/{id}:
    get:
      tags:
        - topupBalance
      summary: Retrieves a TopupBalance by ID
      description: This operation retrieves a TopupBalance entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveTopupBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the TopupBalance
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TopupBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - topupBalance
      summary: Deletes a TopupBalance
      description: This operation deletes a TopupBalance entity.
      operationId: deleteTopupBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the TopupBalance
          required: true
          schema:
            type: string
      responses:
        204:
          description: Deleted
          content: {}
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - topupBalance
      summary: Updates partially a TopupBalance
      description: This operation updates partially a TopupBalance entity.
      operationId: patchTopupBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the TopupBalance
          required: true
          schema:
            type: string
      requestBody:
        description: The TopupBalance to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TopupBalance_Update'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TopupBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: topupBalance
  /adjustBalance:
    get:
      tags:
        - adjustBalance
      summary: List or find AdjustBalance objects
      description: This operation list or find AdjustBalance entities
      operationId: listAdjustBalance
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdjustBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - adjustBalance
      summary: Creates a AdjustBalance
      description: This operation creates a AdjustBalance entity.
      operationId: createAdjustBalance
      requestBody:
        description: The AdjustBalance to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AdjustBalance_Create'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AdjustBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: adjustBalance
  /adjustBalance/{id}:
    get:
      tags:
        - adjustBalance
      summary: Retrieves a AdjustBalance by ID
      description: This operation retrieves a AdjustBalance entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveAdjustBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the AdjustBalance
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AdjustBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - adjustBalance
      summary: Deletes a AdjustBalance
      description: This operation deletes a AdjustBalance entity.
      operationId: deleteAdjustBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the AdjustBalance
          required: true
          schema:
            type: string
      responses:
        204:
          description: Deleted
          content: {}
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - adjustBalance
      summary: Updates partially a AdjustBalance
      description: This operation updates partially a AdjustBalance entity.
      operationId: patchAdjustBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the AdjustBalance
          required: true
          schema:
            type: string
      requestBody:
        description: The AdjustBalance to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AdjustBalance_Update'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AdjustBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: adjustBalance
  /transferBalance:
    get:
      tags:
        - transferBalance
      summary: List or find TransferBalance objects
      description: This operation list or find TransferBalance entities
      operationId: listTransferBalance
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransferBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - transferBalance
      summary: Creates a TransferBalance
      description: This operation creates a TransferBalance entity.
      operationId: createTransferBalance
      requestBody:
        description: The TransferBalance to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferBalance_Create'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TransferBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: transferBalance
  /transferBalance/{id}:
    get:
      tags:
        - transferBalance
      summary: Retrieves a TransferBalance by ID
      description: This operation retrieves a TransferBalance entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveTransferBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the TransferBalance
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TransferBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - transferBalance
      summary: Deletes a TransferBalance
      description: This operation deletes a TransferBalance entity.
      operationId: deleteTransferBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the TransferBalance
          required: true
          schema:
            type: string
      responses:
        204:
          description: Deleted
          content: {}
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - transferBalance
      summary: Updates partially a TransferBalance
      description: This operation updates partially a TransferBalance entity.
      operationId: patchTransferBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the TransferBalance
          required: true
          schema:
            type: string
      requestBody:
        description: The TransferBalance to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferBalance_Update'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TransferBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: transferBalance
  /reserveBalance:
    get:
      tags:
        - reserveBalance
      summary: List or find ReserveBalance objects
      description: This operation list or find ReserveBalance entities
      operationId: listReserveBalance
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReserveBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - reserveBalance
      summary: Creates a ReserveBalance
      description: This operation creates a ReserveBalance entity.
      operationId: createReserveBalance
      requestBody:
        description: The ReserveBalance to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ReserveBalance_Create'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ReserveBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: reserveBalance
  /reserveBalance/{id}:
    get:
      tags:
        - reserveBalance
      summary: Retrieves a ReserveBalance by ID
      description: This operation retrieves a ReserveBalance entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveReserveBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the ReserveBalance
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ReserveBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - reserveBalance
      summary: Deletes a ReserveBalance
      description: This operation deletes a ReserveBalance entity.
      operationId: deleteReserveBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the ReserveBalance
          required: true
          schema:
            type: string
      responses:
        204:
          description: Deleted
          content: {}
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - reserveBalance
      summary: Updates partially a ReserveBalance
      description: This operation updates partially a ReserveBalance entity.
      operationId: patchReserveBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the ReserveBalance
          required: true
          schema:
            type: string
      requestBody:
        description: The ReserveBalance to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ReserveBalance_Update'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ReserveBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: reserveBalance
  /accumulatedBalance:
    get:
      tags:
        - accumulatedBalance
      summary: List or find AccumulatedBalance objects
      description: This operation list or find AccumulatedBalance entities
      operationId: listAccumulatedBalance
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccumulatedBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /accumulatedBalance/{id}:
    get:
      tags:
        - accumulatedBalance
      summary: Retrieves a AccumulatedBalance by ID
      description: This operation retrieves a AccumulatedBalance entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveAccumulatedBalance
      parameters:
        - name: id
          in: path
          description: Identifier of the AccumulatedBalance
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AccumulatedBalance'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /balanceActionHistory:
    get:
      tags:
        - balanceActionHistory
      summary: List or find BalanceActionHistory objects
      description: This operation list or find BalanceActionHistory entities
      operationId: listBalanceActionHistory
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceActionHistory'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /balanceActionHistory/{id}:
    get:
      tags:
        - balanceActionHistory
      summary: Retrieves a BalanceActionHistory by ID
      description: This operation retrieves a BalanceActionHistory entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveBalanceActionHistory
      parameters:
        - name: id
          in: path
          description: Identifier of the BalanceActionHistory
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/BalanceActionHistory'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /hub:
    post:
      tags:
        - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must
        use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        201:
          description: Subscribed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance
        must use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        204:
          description: Deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/topupBalanceCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity TopupBalanceCreateEvent
      description: Example of a client listener for receiving the notification TopupBalanceCreateEvent
      operationId: listenToTopupBalanceCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TopupBalanceCreateEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/topupBalanceCancelEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity TopupBalanceCancelEvent
      description: Example of a client listener for receiving the notification TopupBalanceCancelEvent
      operationId: listenToTopupBalanceCancelEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TopupBalanceCancelEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/topupBalanceFailureEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity TopupBalanceFailureEvent
      description: Example of a client listener for receiving the notification TopupBalanceFailureEvent
      operationId: listenToTopupBalanceFailureEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TopupBalanceFailureEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/adjustBalanceCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity AdjustBalanceCreateEvent
      description: Example of a client listener for receiving the notification AdjustBalanceCreateEvent
      operationId: listenToAdjustBalanceCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AdjustBalanceCreateEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/adjustBalanceCancelEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity AdjustBalanceCancelEvent
      description: Example of a client listener for receiving the notification AdjustBalanceCancelEvent
      operationId: listenToAdjustBalanceCancelEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AdjustBalanceCancelEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/adjustBalanceFailureEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity AdjustBalanceFailureEvent
      description: Example of a client listener for receiving the notification AdjustBalanceFailureEvent
      operationId: listenToAdjustBalanceFailureEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AdjustBalanceFailureEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/transferBalanceCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity TransferBalanceCreateEvent
      description: Example of a client listener for receiving the notification TransferBalanceCreateEvent
      operationId: listenToTransferBalanceCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferBalanceCreateEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/transferBalanceCancelEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity TransferBalanceCancelEvent
      description: Example of a client listener for receiving the notification TransferBalanceCancelEvent
      operationId: listenToTransferBalanceCancelEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferBalanceCancelEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/transferBalanceFailureEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity TransferBalanceFailureEvent
      description: Example of a client listener for receiving the notification TransferBalanceFailureEvent
      operationId: listenToTransferBalanceFailureEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferBalanceFailureEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/reserveBalanceCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ReserveBalanceCreateEvent
      description: Example of a client listener for receiving the notification ReserveBalanceCreateEvent
      operationId: listenToReserveBalanceCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ReserveBalanceCreateEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/reserveBalanceCancelEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ReserveBalanceCancelEvent
      description: Example of a client listener for receiving the notification ReserveBalanceCancelEvent
      operationId: listenToReserveBalanceCancelEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ReserveBalanceCancelEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/reserveBalanceFailureEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ReserveBalanceFailureEvent
      description: Example of a client listener for receiving the notification ReserveBalanceFailureEvent
      operationId: listenToReserveBalanceFailureEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ReserveBalanceFailureEvent'
        required: true
      responses:
        201:
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    AccumulatedBalance:
      required:
        - bucket
        - name
        - totalBalance
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier within the server for the recharge operation
            request
        href:
          type: string
          description: A resource URI pointing to the resource in the OB that stores
            the detailed information.
        description:
          type: string
          description: Text describing the contents of the aggregated balance
        name:
          type: string
          description: Friendly name to identify the aggregated balance
        bucket:
          minItems: 1
          type: array
          description: A reference to the buckets involved in the aggregation
          items:
            $ref: '#/components/schemas/BucketRef'
        logicalResource:
          $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          description: A reference to the product whose consumption is managed by
            the bucket . This is an array to allow scenarios where a buckets are shared
            between different products
          items:
            $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: 'Used to provide information about any other entity with relation
            to the balance, for instance to define customer hierarchy for the balance
            (e.g.: customerId, userId, )'
          items:
            $ref: '#/components/schemas/RelatedParty'
        totalBalance:
          $ref: '#/components/schemas/Quantity'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Represents and tracks the aggregated amount remained or owed in
        certain account which is owned by certain customer for a set of buckets.
    Action:
      required:
        - status
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier for the resource
        href:
          type: string
          description: A reference to the resource
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: an abstract resource. example extensions are BalanceTopup, BalanceDeduct
    ActionStatusType:
      type: string
      description: Valid values for the Action Status Type
      enum:
        - created
        - failed
        - cancelled
        - completed
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Base schema for adressable entities
    AdjustBalance:
      required:
        - status
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier for the resource
        href:
          type: string
          description: A reference to the resource
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        adjustType:
          $ref: '#/components/schemas/AdjustType'
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: The AdjustBalance resource allows adjustments to be made to the
        original BalanceTopup eg increment the amount, alter the recharge periodicity
    AdjustBalance_Create:
      required:
        - amount
        - bucket
        - usageType
      type: object
      properties:
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        adjustType:
          $ref: '#/components/schemas/AdjustType'
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        The AdjustBalance resource allows adjustments to be made to the original BalanceTopup eg increment the amount, alter the recharge periodicity
        Skipped properties: id,href,status,requestedDate,confirmationDate,relatedParty,partyAccount
    AdjustBalance_Update:
      required:
        - status
      type: object
      properties:
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        adjustType:
          $ref: '#/components/schemas/AdjustType'
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        The AdjustBalance resource allows adjustments to be made to the original BalanceTopup eg increment the amount, alter the recharge periodicity
        Skipped properties: id,href
    AdjustType:
      type: string
      description: Valid values for the Balance Adjust types
      enum:
        - recurring
        - oneTime
    BalanceActionHistory:
      required:
        - receiverLogicalResource
        - status
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier for the resource
        href:
          type: string
          description: A reference to the resource
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        isAutoTopup:
          type: boolean
          description: Indicates if the topup requested is an autotopup (to be processed
            periodically)
        numberOfPeriods:
          type: integer
          description: For autotopup indicates the number of occurrences of the period
            the recharge operation must be executed. If not included then no limit
            is set to stop the executionof the topup every period
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        voucher:
          type: string
          description: Identifier for a voucher when the topup can be performed by
            this means
        adjustType:
          $ref: '#/components/schemas/AdjustType'
        amount:
          $ref: '#/components/schemas/Quantity'
        balanceTopup:
          $ref: '#/components/schemas/RelatedTopupBalance'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        costOwner:
          $ref: '#/components/schemas/CostOwnerType'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        receiver:
          $ref: '#/components/schemas/RelatedParty'
        receiverBucket:
          $ref: '#/components/schemas/BucketRef'
        receiverBucketUsageType:
          $ref: '#/components/schemas/UsageType'
        receiverLogicalResource:
          $ref: '#/components/schemas/LogicalResourceRef'
        receiverProduct:
          $ref: '#/components/schemas/ProductRef'
        recurringPeriod:
          $ref: '#/components/schemas/RecurringPeriodType'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        transferCost:
          $ref: '#/components/schemas/Money'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: 'A history of the following operations performed on the bucket:
        TopupBalance, AdjustBalance and TransferBalance'
    Bucket:
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier within the server for the bucket
        href:
          type: string
          description: A resource URI pointing to the resource in the OB that stores
            the detailed information for the bucket
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Text describing the contents of the balance managed by the
            bucket
        isShared:
          type: boolean
          description: True if the bucket is shared between several devices or users
        name:
          type: string
          description: Friendly name to identify the bucket
        remainingValueName:
          type: string
          description: Remaining amount in a formatted string for the bucket given
            in the balance unit (for example 1.9 Gb). This formatted string could
            be used for display needs for example
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: 'Used to provide information about any other entity with relation
            to the balance, for instance to define customer hierarchy for the balance
            (e.g.: customerId, userId, )'
          items:
            $ref: '#/components/schemas/RelatedParty'
        remainingValue:
          $ref: '#/components/schemas/Quantity'
        reservedValue:
          $ref: '#/components/schemas/Quantity'
        status:
          $ref: '#/components/schemas/BucketStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A bucket (called UsageVolumProduct in the SID Model) represents
        and tracks a quantity of usage (remaining or consumed). It could be either
        a quantity or an amount in a currency. It can represent a fixed number of
        SMS,MMS, call minutes, quantity of data and so on
    BucketRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: link to the resource that holds bucket information
    BucketStatusType:
      type: string
      description: Valid values for the Balance Status Type
      enum:
        - active
        - suspended
        - expired
    ChannelRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the channel.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: The channel to which the resource reference to. e.g. channel for
        selling product offerings, channel for opening a trouble ticket etc..
    CostOwnerType:
      type: string
      description: Valid values for this type
      enum:
        - originator
        - receiver
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
      description: Base Extensible schema for use in TMForum Open-APIs
    LogicalResourceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: reference to the LogicalResource eg MSISDN
    Money:
      type: object
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          description: A positive floating point number
          format: float
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A base / value business entity used to represent money
    PartyAccountRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the party account
        href:
          type: string
          description: Reference of the party account
        description:
          type: string
          description: Detailed description of the party account
        name:
          type: string
          description: Name of the party account
        status:
          type: string
          description: The condition of the account, such as due, paid, in arrears.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: PartyAccount reference. A party account is an arrangement that
        a party has with an enterprise that provides products to the party.
    PaymentMethodRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: PaymentMethod reference. A payment method defines a specific mean
        of payment (e.g direct debit).
    ProductRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1.0
        units:
          type: string
          description: Unit
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: An amount in a given unit
    RecurringPeriodType:
      type: string
      description: Valid values for this type
      enum:
        - weekly
        - fortnightly
        - monthly
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party
        role linked to a specific entity.
    RelatedTopupBalance:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the TopupBalance. In the PrepayBalanceManagement
            API this is parent or child
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related balance topup defines a relationship
        via a role to another balance topup. Used in the PrepayBalanceManagement API
        to track child topups that are related to the parent (initiating balance topup
        resource). PrepayBalanceManagement defines the child role
    ReserveBalance:
      required:
        - status
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier for the resource
        href:
          type: string
          description: A reference to the resource
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: The ReserveBalance resource allows adjustments to be made to the
        original BalanceTopup eg increment the amount, alter the recharge periodicity
    ReserveBalance_Create:
      required:
        - bucket
        - partyAccount
        - usageType
      type: object
      properties:
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        The ReserveBalance resource allows adjustments to be made to the original BalanceTopup eg increment the amount, alter the recharge periodicity
        Skipped properties: id,href,status,requestedDate,confirmationDate,relatedParty
    ReserveBalance_Update:
      required:
        - reason
        - status
      type: object
      properties:
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        The ReserveBalance resource allows adjustments to be made to the original BalanceTopup eg increment the amount, alter the recharge periodicity
        Skipped properties: id,href
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: 1985-04-12T23:20:50.52Z
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format. If you
            define a start, you must also define an end
          format: date-time
          example: 1985-04-12T23:20:50.52Z
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A period of time, either as a deadline (endDateTime only) a startDateTime
        only, or both
    TopupBalance:
      required:
        - status
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier for the resource
        href:
          type: string
          description: A reference to the resource
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        isAutoTopup:
          type: boolean
          description: Indicates if the topup requested is an autotopup (to be processed
            periodically)
        numberOfPeriods:
          type: integer
          description: For autotopup indicates the number of occurrences of the period
            the recharge operation must be executed. If not included then no limit
            is set to stop the executionof the topup every period
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        voucher:
          type: string
          description: Identifier for a voucher when the topup can be performed by
            this means
        amount:
          $ref: '#/components/schemas/Quantity'
        balanceTopup:
          $ref: '#/components/schemas/RelatedTopupBalance'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        recurringPeriod:
          $ref: '#/components/schemas/RecurringPeriodType'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: 'Represents a detailed description of a recharge operation requested
        over a bucket (defined by a specific product or reference to a product (i.e.:
        a commercial id such as an msisidn) and a service type)'
    TopupBalance_Create:
      required:
        - amount
        - bucket
        - partyAccount
        - usageType
      type: object
      properties:
        description:
          type: string
          description: Description of the recharge operation
        isAutoTopup:
          type: boolean
          description: Indicates if the topup requested is an autotopup (to be processed
            periodically)
        numberOfPeriods:
          type: integer
          description: For autotopup indicates the number of occurrences of the period
            the recharge operation must be executed. If not included then no limit
            is set to stop the executionof the topup every period
        reason:
          type: string
          description: Text describing the reason for the action/task
        voucher:
          type: string
          description: Identifier for a voucher when the topup can be performed by
            this means
        amount:
          $ref: '#/components/schemas/Quantity'
        balanceTopup:
          $ref: '#/components/schemas/RelatedTopupBalance'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        recurringPeriod:
          $ref: '#/components/schemas/RecurringPeriodType'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        Represents a detailed description of a recharge operation requested over a bucket (defined by a specific product or reference to a product (i.e.: a commercial id such as an msisidn) and a service type)
        Skipped properties: id,href,status,requestedDate,confirmationDate,relatedParty
    TopupBalance_Update:
      required:
        - status
      type: object
      properties:
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        isAutoTopup:
          type: boolean
          description: Indicates if the topup requested is an autotopup (to be processed
            periodically)
        numberOfPeriods:
          type: integer
          description: For autotopup indicates the number of occurrences of the period
            the recharge operation must be executed. If not included then no limit
            is set to stop the executionof the topup every period
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        voucher:
          type: string
          description: Identifier for a voucher when the topup can be performed by
            this means
        amount:
          $ref: '#/components/schemas/Quantity'
        balanceTopup:
          $ref: '#/components/schemas/RelatedTopupBalance'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        logicalResource:
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        recurringPeriod:
          $ref: '#/components/schemas/RecurringPeriodType'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        Represents a detailed description of a recharge operation requested over a bucket (defined by a specific product or reference to a product (i.e.: a commercial id such as an msisidn) and a service type)
        Skipped properties: id,href
    TransferBalance:
      required:
        - channel
        - href
        - id
        - logicalResource
        - reason
        - receiverLogicalResource
        - status
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier for the resource
        href:
          type: string
          description: A reference to the resource
        confirmationDate:
          type: string
          description: Date when the deduction was confirmed in the server
          format: date-time
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        requestedDate:
          type: string
          description: Date when the deduction request was received in the server
          format: date-time
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        costOwner:
          $ref: '#/components/schemas/CostOwnerType'
        logicalResource:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        partyAccount:
          $ref: '#/components/schemas/PartyAccountRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        receiver:
          $ref: '#/components/schemas/RelatedParty'
        receiverBucket:
          $ref: '#/components/schemas/BucketRef'
        receiverBucketUsageType:
          $ref: '#/components/schemas/UsageType'
        receiverLogicalResource:
          $ref: '#/components/schemas/LogicalResourceRef'
        receiverProduct:
          $ref: '#/components/schemas/ProductRef'
        relatedParty:
          type: array
          description: Used to provide information about any other entity with relation
            to the operation
          items:
            $ref: '#/components/schemas/RelatedParty'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        status:
          $ref: '#/components/schemas/ActionStatusType'
        transferCost:
          $ref: '#/components/schemas/Money'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: The TransferBalance resource is a detailed description of credit
        transfer operation requested between two buckets (reference to products owned
        by customers and consuming credit when using a service).
    TransferBalance_Create:
      required:
        - amount
        - bucket
        - channel
        - logicalResource
        - reason
        - receiverBucket
        - receiverBucketUsageType
        - receiverLogicalResource
        - usageType
      type: object
      properties:
        description:
          type: string
          description: Description of the recharge operation
        reason:
          type: string
          description: Text describing the reason for the action/task
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        costOwner:
          $ref: '#/components/schemas/CostOwnerType'
        logicalResource:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        receiver:
          $ref: '#/components/schemas/RelatedParty'
        receiverBucket:
          $ref: '#/components/schemas/BucketRef'
        receiverBucketUsageType:
          $ref: '#/components/schemas/UsageType'
        receiverLogicalResource:
          $ref: '#/components/schemas/LogicalResourceRef'
        receiverProduct:
          $ref: '#/components/schemas/ProductRef'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        transferCost:
          $ref: '#/components/schemas/Money'
        usageType:
          $ref: '#/components/schemas/UsageType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        The TransferBalance resource is a detailed description of credit transfer operation requested between two buckets (reference to products owned by customers and consuming credit when using a service).
        Skipped properties: id,href,status,requestedDate,confirmationDate,relatedParty,partyAccount
    TransferBalance_Update:
      required:
        - channel
        - logicalResource
        - reason
        - receiverLogicalResource
      type: object
      properties:
        reason:
          type: string
          description: Text describing the reason for the action/task
        amount:
          $ref: '#/components/schemas/Quantity'
        bucket:
          $ref: '#/components/schemas/BucketRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        costOwner:
          $ref: '#/components/schemas/CostOwnerType'
        logicalResource:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LogicalResourceRef'
        product:
          type: array
          items:
            $ref: '#/components/schemas/ProductRef'
        receiver:
          $ref: '#/components/schemas/RelatedParty'
        receiverBucket:
          $ref: '#/components/schemas/BucketRef'
        receiverBucketUsageType:
          $ref: '#/components/schemas/UsageType'
        receiverLogicalResource:
          $ref: '#/components/schemas/LogicalResourceRef'
        receiverProduct:
          $ref: '#/components/schemas/ProductRef'
        requestor:
          $ref: '#/components/schemas/RelatedParty'
        transferCost:
          $ref: '#/components/schemas/Money'
        usageType:
          $ref: '#/components/schemas/UsageType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        The TransferBalance resource is a detailed description of credit transfer operation requested between two buckets (reference to products owned by customers and consuming credit when using a service).
        Skipped properties: id,href,status,requestedDate,confirmationDate,validFor,description,partyAccount,relatedParty
    UsageType:
      type: string
      description: Valid values for the usage type are
      enum:
        - monetary
        - voice
        - data
        - sms
        - other
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
    TopupBalanceCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/TopupBalanceCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    TopupBalanceCreateEventPayload:
      type: object
      properties:
        topupBalance:
          $ref: '#/components/schemas/TopupBalance'
      description: The event data structure
    TopupBalanceCancelEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/TopupBalanceCancelEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    TopupBalanceCancelEventPayload:
      type: object
      properties:
        topupBalance:
          $ref: '#/components/schemas/TopupBalance'
      description: The event data structure
    TopupBalanceFailureEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/TopupBalanceFailureEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    TopupBalanceFailureEventPayload:
      type: object
      properties:
        topupBalance:
          $ref: '#/components/schemas/TopupBalance'
      description: The event data structure
    AdjustBalanceCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/AdjustBalanceCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    AdjustBalanceCreateEventPayload:
      type: object
      properties:
        adjustBalance:
          $ref: '#/components/schemas/AdjustBalance'
      description: The event data structure
    AdjustBalanceCancelEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/AdjustBalanceCancelEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    AdjustBalanceCancelEventPayload:
      type: object
      properties:
        adjustBalance:
          $ref: '#/components/schemas/AdjustBalance'
      description: The event data structure
    AdjustBalanceFailureEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/AdjustBalanceFailureEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    AdjustBalanceFailureEventPayload:
      type: object
      properties:
        adjustBalance:
          $ref: '#/components/schemas/AdjustBalance'
      description: The event data structure
    TransferBalanceCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/TransferBalanceCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    TransferBalanceCreateEventPayload:
      type: object
      properties:
        transferBalance:
          $ref: '#/components/schemas/TransferBalance'
      description: The event data structure
    TransferBalanceCancelEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/TransferBalanceCancelEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    TransferBalanceCancelEventPayload:
      type: object
      properties:
        transferBalance:
          $ref: '#/components/schemas/TransferBalance'
      description: The event data structure
    TransferBalanceFailureEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/TransferBalanceFailureEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    TransferBalanceFailureEventPayload:
      type: object
      properties:
        transferBalance:
          $ref: '#/components/schemas/TransferBalance'
      description: The event data structure
    ReserveBalanceCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ReserveBalanceCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ReserveBalanceCreateEventPayload:
      type: object
      properties:
        reserveBalance:
          $ref: '#/components/schemas/ReserveBalance'
      description: The event data structure
    ReserveBalanceCancelEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ReserveBalanceCancelEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ReserveBalanceCancelEventPayload:
      type: object
      properties:
        reserveBalance:
          $ref: '#/components/schemas/ReserveBalance'
      description: The event data structure
    ReserveBalanceFailureEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ReserveBalanceFailureEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ReserveBalanceFailureEventPayload:
      type: object
      properties:
        reserveBalance:
          $ref: '#/components/schemas/ReserveBalance'
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common
            list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown
            to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which
            can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code
        (3xx, 4xx, 5xx)
